{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Participant } from \"../../components/Participant\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Home() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      participants = _useState2[0],\n      setParticipants = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      participantName = _useState4[0],\n      SetParticipantName = _useState4[1];\n\n  function handleParticipantAdd() {\n    if (participants.includes(participantName)) {\n      return Alert.alert(\"Participante Existe\", \" Já Existe esse nome na Lista\");\n    }\n\n    setParticipants(function (prevState) {\n      return [].concat(_toConsumableArray(prevState), [participantName]);\n    });\n  }\n\n  function handleParticipantremove(name) {\n    Alert.alert(\"Remover\", \"Deseja remover \" + name + \" da Lista?\", [{\n      text: 'sim',\n      onPress: function onPress() {\n        return Alert.alert('Deletado!');\n      }\n    }, {\n      text: ' Não',\n      style: 'cancel'\n    }]);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.eventName,\n      children: \"Nome do evento\"\n    }), _jsx(Text, {\n      style: styles.eventDate,\n      children: \"S\\xE1bado, 01 de Outubro 2022\"\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Nome do participante\",\n        placeholderTextColor: \"#6B6B6B\",\n        onChangeText: function onChangeText(event) {\n          return SetParticipantName;\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleParticipantAdd,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"+\"\n        })\n      })]\n    }), _jsx(FlatList, {\n      data: participants,\n      keyExtractor: function keyExtractor(item) {\n        return item;\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Participant, {\n          name: item,\n          onRemove: function onRemove() {\n            return handleParticipantremove(item);\n          }\n        }, item);\n      },\n      showsVerticalScrollIndicator: false,\n      ListEmptyComponent: function ListEmptyComponent() {\n        return _jsx(Text, {\n          style: styles.listEmpyText,\n          children: \"Adicione participantes a sua lista\"\n        });\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","Participant","styles","Home","participants","setParticipants","participantName","SetParticipantName","handleParticipantAdd","includes","Alert","alert","prevState","handleParticipantremove","name","text","onPress","style","container","eventName","eventDate","form","input","event","button","buttonText","item","listEmpyText"],"sources":["E:/ROCKETSEAT/Ignite React 2022 (outubro)/React Native/ignite/imhere/src/screens/Home/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport { Text, View, TextInput, TouchableOpacity, FlatList, Alert  } from \"react-native\";\r\n\r\nimport { Participant } from \"../../components/Participant\";\r\n\r\nimport { styles } from \"./styles\";\r\n\r\nexport function Home() {\r\n  const [participants, setParticipants] = useState<string[]>([])\r\n  const [participantName, SetParticipantName] = useState('',)\r\n\r\n\r\n  \r\n  \r\n  function handleParticipantAdd() {\r\n    if(participants.includes(participantName)){\r\n     return Alert.alert(\"Participante Existe\",\" Já Existe esse nome na Lista\")\r\n    }\r\n    //console.log(\"clicou no botão Add\");\r\n    setParticipants(prevState => [...prevState, participantName])\r\n    \r\n  }\r\n\r\n  function handleParticipantremove(name: string){\r\n    Alert.alert(\"Remover\", `Deseja remover ${name} da Lista?`, [\r\n      {\r\n        text: 'sim',\r\n        onPress: () => Alert.alert('Deletado!')\r\n      },\r\n\r\n      {\r\n        text:' Não',\r\n        style: 'cancel'\r\n      }\r\n\r\n    ])\r\n    //console.log(`Clicou no botão de remover ${name}`)\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.eventName}>Nome do evento</Text>\r\n\r\n      <Text style={styles.eventDate}>Sábado, 01 de Outubro 2022</Text>\r\n\r\n      <View style={styles.form}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Nome do participante\"\r\n          placeholderTextColor=\"#6B6B6B\"\r\n          onChangeText={event => SetParticipantName}\r\n        />\r\n        <TouchableOpacity style={styles.button} onPress={handleParticipantAdd}>\r\n          <Text style={styles.buttonText}>+</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <FlatList \r\n        data={participants} \r\n        keyExtractor={item =>item}\r\n        renderItem={({ item }) => (\r\n         <Participant \r\n            key={item}\r\n            name={item}\r\n            onRemove={() => handleParticipantremove(item)} \r\n          />   \r\n        )}\r\n        showsVerticalScrollIndicator={false}\r\n        ListEmptyComponent = {()=> (\r\n          <Text style={styles.listEmpyText}>\r\n            Adicione participantes a sua lista\r\n          </Text>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAIA,SAASC,WAAT;AAEA,SAASC,MAAT;;;AAEA,OAAO,SAASC,IAAT,GAAgB;EACrB,gBAAwCH,QAAQ,CAAW,EAAX,CAAhD;EAAA;EAAA,IAAOI,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAA8CL,QAAQ,CAAC,EAAD,CAAtD;EAAA;EAAA,IAAOM,eAAP;EAAA,IAAwBC,kBAAxB;;EAKA,SAASC,oBAAT,GAAgC;IAC9B,IAAGJ,YAAY,CAACK,QAAb,CAAsBH,eAAtB,CAAH,EAA0C;MACzC,OAAOI,KAAK,CAACC,KAAN,CAAY,qBAAZ,EAAkC,+BAAlC,CAAP;IACA;;IAEDN,eAAe,CAAC,UAAAO,SAAS;MAAA,oCAAQA,SAAR,IAAmBN,eAAnB;IAAA,CAAV,CAAf;EAED;;EAED,SAASO,uBAAT,CAAiCC,IAAjC,EAA8C;IAC5CJ,KAAK,CAACC,KAAN,CAAY,SAAZ,sBAAyCG,IAAzC,iBAA2D,CACzD;MACEC,IAAI,EAAE,KADR;MAEEC,OAAO,EAAE;QAAA,OAAMN,KAAK,CAACC,KAAN,CAAY,WAAZ,CAAN;MAAA;IAFX,CADyD,EAMzD;MACEI,IAAI,EAAC,MADP;MAEEE,KAAK,EAAE;IAFT,CANyD,CAA3D;EAaD;;EAED,OACE,MAAC,IAAD;IAAM,KAAK,EAAEf,MAAM,CAACgB,SAApB;IAAA,WACE,KAAC,IAAD;MAAM,KAAK,EAAEhB,MAAM,CAACiB,SAApB;MAAA;IAAA,EADF,EAGE,KAAC,IAAD;MAAM,KAAK,EAAEjB,MAAM,CAACkB,SAApB;MAAA;IAAA,EAHF,EAKE,MAAC,IAAD;MAAM,KAAK,EAAElB,MAAM,CAACmB,IAApB;MAAA,WACE,KAAC,SAAD;QACE,KAAK,EAAEnB,MAAM,CAACoB,KADhB;QAEE,WAAW,EAAC,sBAFd;QAGE,oBAAoB,EAAC,SAHvB;QAIE,YAAY,EAAE,sBAAAC,KAAK;UAAA,OAAIhB,kBAAJ;QAAA;MAJrB,EADF,EAOE,KAAC,gBAAD;QAAkB,KAAK,EAAEL,MAAM,CAACsB,MAAhC;QAAwC,OAAO,EAAEhB,oBAAjD;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAEN,MAAM,CAACuB,UAApB;UAAA;QAAA;MADF,EAPF;IAAA,EALF,EAiBE,KAAC,QAAD;MACE,IAAI,EAAErB,YADR;MAEE,YAAY,EAAE,sBAAAsB,IAAI;QAAA,OAAGA,IAAH;MAAA,CAFpB;MAGE,UAAU,EAAE;QAAA,IAAGA,IAAH,QAAGA,IAAH;QAAA,OACX,KAAC,WAAD;UAEG,IAAI,EAAEA,IAFT;UAGG,QAAQ,EAAE;YAAA,OAAMb,uBAAuB,CAACa,IAAD,CAA7B;UAAA;QAHb,GACQA,IADR,CADW;MAAA,CAHd;MAUE,4BAA4B,EAAE,KAVhC;MAWE,kBAAkB,EAAI;QAAA,OACpB,KAAC,IAAD;UAAM,KAAK,EAAExB,MAAM,CAACyB,YAApB;UAAA;QAAA,EADoB;MAAA;IAXxB,EAjBF;EAAA,EADF;AAqCD"},"metadata":{},"sourceType":"module"}